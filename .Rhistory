grid.arrange(sensCurve, XpertSavingCurve, NNTCurve, ncol=1)
dev.off()
tiff("Results/4 Curves.tif", width = 3.5, height = 10.5, units = "in", res = 100)
require(gridExtra)
# grid::grid.newpage()
# maxWidth = grid::unit.pmax(sensCurve$widths[2:5], NNTCurve$widths[2:5])
# sensCurve$widths[2:5] <- as.list(maxWidth)
# XpertSavingCurve$widths[2:5] <- as.list(maxWidth)
# NNTCurve$widths[2:5] <- as.list(maxWidth)
# grid::grid.draw(rbind(sensCurve, XpertSavingCurve, NNTCurve))
grid.arrange(sensCurve, XpertSavingCurve, NNTCurve, ncol=1)
dev.off()
### NNT
base <- ggplot(CAD_Xpert_plot, aes(Score, NNT)) + geom_path(aes(color = DeepLearningSystem)) +
geom_ribbon(data = CAD_Xpert_plot %>% filter(Score <0.95), aes(x = Score, ymin = NNT_L, ymax = NNT_H, color = DeepLearningSystem, fill = DeepLearningSystem), alpha= 0.2)
NNTCurve <- base + theme_light()  + labs(x = "Abnormality Score", y= "NNT", subtitle = paste0("The NNT vs abnormality score using Xpert results as the reference (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = "none") +theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0.4, 1, 0.1))
NNTCurve
NNTCurve <- base + theme_light()  + labs(x = "Abnormality Score", y= "NNT", subtitle = paste0("The NNT vs abnormality score using Xpert results as the reference (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = "none") +theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
NNTCurve
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
NNTCurve <- base + theme_light()  + labs(x = "Abnormality Score", y= "NNT", subtitle = paste0("The NNT vs abnormality score using Xpert results as the reference (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = "none") + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
NNTCurve <- base + theme_light()  + labs(x = "Abnormality Score", y= "NNT", subtitle = paste0("The NNT vs abnormality score using Xpert results as the reference (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = "none") + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
NNTCurve
### NNT
base <- ggplot(CAD_Xpert_plot, aes(Score, NNT)) + geom_path(aes(color = DeepLearningSystem)) +
geom_ribbon(data = CAD_Xpert_plot %>% filter(Score <0.95), aes(x = Score, ymin = NNT_L, ymax = NNT_H, color = DeepLearningSystem, fill = DeepLearningSystem), alpha= 0.2)
NNTCurve <- base + theme_light()  + labs(x = "Abnormality Score", y= "NNT", subtitle = paste0("The NNT vs abnormality score using Xpert results as the reference (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = "none") + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
NNTCurve
### NNT
base <- ggplot(CAD_Xpert_plot, aes(Score, NNT)) + geom_path(aes(color = DeepLearningSystem))
NNTCurve <- base + theme_light()  + labs(x = "Abnormality Score", y= "NNT", subtitle = paste0("The NNT vs abnormality score using Xpert results as the reference (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = "none") + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
NNTCurve
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/4 Curves.R', echo=TRUE)
tiff("Results/4 Curves.tif", width = 10, height = 10, units = "in", res = 100)
require(gridExtra)
grid.arrange(ROC, sensCurve, XpertSavingCurve, NNTCurve, nrow=2)
dev.off()
source("DataWrangling/GlobalOption.R")
source("radiologist.R")
Radiologist <- Radiologist[Radiologist$Referral %in% "MDF", ]
New <- MDF[MDF$TB.Medication.History %in% "No",]
Old <- MDF[MDF$TB.Medication.History %in% "Yes",]
Young <- MDF[MDF$AgeGroup %in% "[15,25)",]
Middle <- MDF[MDF$AgeGroup %in% "[25,60)",]
Senior <- MDF[MDF$AgeGroup %in% "[60,108]",]
Private <- subset(MDF, MDF$Referral %in% "Private Provider")
Public <- subset(MDF, MDF$Referral %in% "Public DOTS Facilities")
WalkIn <- subset(MDF, MDF$Referral %in% "Walk-in")
Missing <- subset(MDF, is.na(MDF$Referral)==T)
New_long <- MDF_long[MDF_long$TB.Medication.History %in% "No",]
Old_long <- MDF_long[MDF_long$TB.Medication.History %in% "Yes",]
Young_long <- MDF_long[MDF_long$AgeGroup %in% "[15,25)",]
Middle_long <- MDF_long[MDF_long$AgeGroup %in% "[25,60)",]
Senior_long <- MDF_long[MDF_long$AgeGroup %in% "[60,108]",]
Private_long <- subset(MDF_long, MDF_long$Referral %in% "Private Provider")
Public_long <- subset(MDF_long, MDF_long$Referral %in% "Public DOTS Facilities")
WalkIn_long <- subset(MDF_long, MDF_long$Referral %in% "Walk-in")
Missing_long <- subset(MDF_long, is.na(MDF_long$Referral)==T)
# source("Chapter/Subgroup Table/Young.R")
# source("Chapter/Subgroup Table/Middle.R")
# source("Chapter/Subgroup Table/Senior.R")
# source("Chapter/Subgroup Table/Private.R")
# source("Chapter/Subgroup Table/Public.R")
# # write.csv(CAD_Xpert_plot_Middle, "Chapter/Subgroup Table/CAD_Xpert_plot_Middle.csv")
# # write.csv(CAD_Xpert_plot_Young, "Chapter/Subgroup Table/CAD_Xpert_plot_Young.csv")
# # write.csv(CAD_Xpert_plot_Senior, "Chapter/Subgroup Table/CAD_Xpert_plot_Senior.csv")
# # write.csv(CAD_Xpert_plot_Private, "Chapter/Subgroup Table/CAD_Xpert_plot_Private.csv")
# # write.csv(CAD_Xpert_plot_Public, "Chapter/Subgroup Table/CAD_Xpert_plot_Public.csv")
#
# source("Chapter/Subgroup Table/WalkIn.R")
# source("Chapter/Subgroup Table/Missing.R")
# source("Chapter/Subgroup Table/New.R")
# source("Chapter/Subgroup Table/Old.R")
#
#
# # save(CAD_Xpert_plot_Young, "Young.rdata")
# SubgroupTable <- rbind(CAD_Xpert_plot_New, CAD_Xpert_plot_Old, CAD_Xpert_plot_Young, CAD_Xpert_plot_Middle, CAD_Xpert_plot_Senior, CAD_Xpert_plot_Private, CAD_Xpert_plot_Public, CAD_Xpert_plot_WalkIn, CAD_Xpert_plot_Missing)
# write.csv(SubgroupTable, "Chapter/Subgroup Table/SubgroupTable.csv")
SubgroupPlot <- read.csv("Chapter/Subgroup Table/SubgroupTable.csv")
SubgroupPlot <- SubgroupPlot[, -1]
SubgroupPlot$Score[SubgroupPlot$DeepLearningSystem %in% "CAD4TB"] <- SubgroupPlot$Score[SubgroupPlot$DeepLearningSystem %in% "CAD4TB"]/100
SubgroupPlotOrigin <- SubgroupPlot
# Choose the DL System
# SubgroupPlot <- SubgroupPlotOrigin[SubgroupPlotOrigin$DeepLearningSystem %in% "CAD4TB", ]
# SubgroupPlot <- SubgroupPlotOrigin[SubgroupPlotOrigin$DeepLearningSystem %in% "IF2", ]
# SubgroupPlot <- SubgroupPlotOrigin[SubgroupPlotOrigin$DeepLearningSystem %in% "JF1", ]
# SubgroupPlot <- SubgroupPlotOrigin[SubgroupPlotOrigin$DeepLearningSystem %in% "Lunit", ]
SubgroupPlot <- SubgroupPlotOrigin[SubgroupPlotOrigin$DeepLearningSystem %in% "qXR", ]
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/SubGroupPlotWithoutCI.R', echo=TRUE)
tiff(paste0("Results/6 Curves of ", unique(SubgroupPlot$DeepLearningSystem, " (no CI) in subgroups.tif")), width = 15, height = 10, units = "in", res = 100)
require(gridExtra)
grid.arrange(ROC, PRCurve, sensCurve, SpecScore, ppvCurve, XpertSens, ncol=3)
dev.off()
source("DataWrangling/GlobalOption.R")
CAD_Xpert_plot <- read.csv("Results/CAD_Xpert Cutoffs TABLE 4 digits.csv")
CAD_Xpert_plot <- CAD_Xpert_plot[, -1]
CAD_Xpert_plot$NNT <- 1/CAD_Xpert_plot$ppv
CAD_Xpert_plot$NNT_H <- 1/CAD_Xpert_plot$PPV_L
CAD_Xpert_plot$NNT_L <- 1/CAD_Xpert_plot$PPV_H
CAD_Xpert_plot <- CAD_Xpert_plot[!CAD_Xpert_plot$DeepLearningSystem %in% c("IF1", "JF2", "IF3"), ]
CAD_Xpert_plot$Score[CAD_Xpert_plot$DeepLearningSystem %in% "CAD4TB"] <- CAD_Xpert_plot$Score[CAD_Xpert_plot$DeepLearningSystem %in% "CAD4TB"]/100
names(CAD_Xpert_plot)
#### ROC --------------------
CAD_Xpert_plot$X_L <- 1-CAD_Xpert_plot$Spec_H
CAD_Xpert_plot$X_H <- 1-CAD_Xpert_plot$Spec_L
base <- ggplot(CAD_Xpert_plot, aes(X, Sens)) + geom_path(aes(color = DeepLearningSystem)) + geom_ribbon(aes(x = X, ymin = Sens_L, ymax = Sens_H, color = DeepLearningSystem, fill = DeepLearningSystem), alpha= 0.2) + geom_ribbon(aes(y = Sens, xmin = X_L, xmax = X_H, color = DeepLearningSystem, fill = DeepLearningSystem), alpha= 0.2)
ROC <- base + theme_minimal() + geom_abline(slope=1, intercept = 0, linetype = "dashed", alpha=0.7, color = "grey") + coord_equal() +   labs(x = "1-Specificity", y= "Sensitivity", subtitle = paste0("The ROC curves (n=", length(MDF$PID_OMRS), ")"))  +theme(legend.position = c(0.95,0.05), legend.justification = c("right", "bottom")) + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))+ scale_y_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
ROC
source("radiologist.R")
source("radiologist.R")
humanAI <- read.csv("Results/HumanAI.csv")
names(humanAI)
names(Radiologist)
View(humanAI)
CAD_Xpert_plot <- read.csv("Results/CAD_Xpert Cutoffs TABLE 4 digits.csv")
CAD_Xpert_plot <- CAD_Xpert_plot[, -1]
CAD_Xpert_plot <- CAD_Xpert_plot[!CAD_Xpert_plot$DeepLearningSystem %in% c("IF1", "JF2", "IF3"), ]
# knitr::kable(Radiologist[(Radiologist$Referral %in% "MDF"), c(8, 10, 11)])
Human <- Radiologist[(Radiologist$Referral %in% "MDF"), c(8, 10, 11, 4)]
Human <- Human[c(3,2,1), ]
Human <- rbind(Human, Human, Human, Human, Human)
AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
AI$Subject <- paste(AI$DeepLearningSystem, AI$Comment)
AI <- as.data.table(AI)
# knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1, 4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 8]- humanAI[, 4])
names(humanAI)
require(data.table)
Human <- Radiologist[(Radiologist$Referral %in% "MDF"), c(8, 10, 11, 4)]
Human <- Human[c(3,2,1), ]
Human <- rbind(Human, Human, Human, Human, Human)
AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
AI$Subject <- paste(AI$DeepLearningSystem, AI$Comment)
require(data.table)
AI <- as.data.table(AI)
# knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1, 4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 8]- humanAI[, 4])
names(humanAI)
names(CAD_Xpert_plot)
names(AI)
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 8]- humanAI[, 4])
humanAI <- humanAI[, c(1,2,3,5:7, 9)]
names(humanAI)
colnames(humanAI) <- c("human benchmark", "sensitivity", "specificy", "DL System", "AIScore", "sensitivity", "specificy", "Diff specificity")
write.csv(humanAI, "Results/humanAI.csv")
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 8]- humanAI[, 4])
humanAI <- humanAI[, c(1,2,3,5:7, 9)]
colnames(humanAI) <- c("human benchmark", "sensitivity", "specificy", "DL System", "AIScore", "sensitivity", "specificy", "Diff specificity")
humanAI$Diff <- percent(humanAI[, 8]- humanAI[, 4])
humanAI$Diff <- percent(humanAI[, 9]- humanAI[, 4])
# knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI <- humanAI[, c(1,2,3,5:7, 9)]
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 9]- humanAI[, 4])
humanAI <- humanAI[, c(1,2,3,5:7, 9)]
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 9]- humanAI[, 4])
names(humanAI)
humanAI <- humanAI[, c(1,2,3,5:8, 10)]
colnames(humanAI) <- c("human benchmark", "sensitivity", "specificy", "DL System", "AIScore", "sensitivity", "specificy", "Diff specificity")
write.csv(humanAI, "Results/humanAI.csv")
humanAI <- read.csv("Results/HumanAI.csv")
# Human <- Human[c(3,2,1), ]
# Human <- rbind(Human, Human, Human, Human, Human)
#
# AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
# AI$Subject <- paste(AI$DeepLearningSystem, AI$Comment)
# require(data.table)
# AI <- as.data.table(AI)
# # knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
# AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
# # Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 9]- humanAI[, 4])
humanAI <- humanAI[, c(1,2,3,5:8, 10)]
colnames(humanAI) <- c("human benchmark", "sensitivity", "specificy", "DL System", "AIScore", "sensitivity", "specificy", "Diff specificity")
write.csv(humanAI, "Results/humanAI.csv", row.names = F)
humanAI <- read.csv("Results/HumanAI.csv")
head(humanAI)
# Any abnormality
MDF$DL[MDF$CAD4TB6> humanAI[humanAI$human.benchmark %in% "Any Abnormality" & humanAI$DL.System %in% "CAD4TB", 5]] <- "positive"
summary(MDF$DL)
table(MDF$DL)
length(MDF[MDF$CAD4TB6>54, ])
length(MDF[MDF$CAD4TB6>54, 1])
# Any abnormality
MDF$DL[MDF$CAD4TB6>= humanAI[humanAI$human.benchmark %in% "Any Abnormality" & humanAI$DL.System %in% "CAD4TB", 5]] <- "positive"
table(MDF$DL)
length(MDF[MDF$CAD4TB6>=54, 1])
# Any abnormality
MDF$DL <- "negative"
MDF$DL[MDF$CAD4TB6>= humanAI[humanAI$human.benchmark %in% "Any Abnormality" & humanAI$DL.System %in% "CAD4TB", 5]] <- "positive"
table(MDF$DL)
library(moments)
source("radiologist.R")
source("Chapter/table1.R")
summary(MDF$Referral)
summary(is.na(MDF$Referral))
MDF$PID_OMRS(is.na(MDF$Referral))
MDF$PID_OMRS[is.na(MDF$Referral]
MDF$PID_OMRS[is.na(MDF$Referral==T]
MDF$PID_OMRS[is.na(MDF$Referral)==T]
write.csv(MDF$PID_OMRS[is.na(MDF$Referral)==T], "tempt.csv")
write.csv(MDF$PID_OMRS[is.na(MDF$Referral)==T], "tempt.csv")
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/CAR-Bangladesh/ProjectMachineBGD/CAR_BGD/Chapter/table1.R', echo=TRUE)
View(Radiologist)
source("DataWrangling/GlobalOption.R")
HumanReader <- function (dataset){
### Highly suggestive of TB -------------------------------
TP <- sum(dataset$rad.highly.TB %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.highly.TB %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Highly <- rval$elements[c(59, 55)]
rm(TP, FP, TN, FN)
###  High+possible ----------------------------
TP <- sum(dataset$rad.TB %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.TB %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Probably <- rval$elements[c(59, 55)]
rm(TP, FP, TN, FN)
### Any abnormalities ------------------------------
TP <- sum(dataset$rad.abn %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.abn %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Any <- rval$elements[c(59, 55)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame(matrix(unlist(c(Highly, Probably, Any)), nrow = 3, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
AccuracyTable$AccuracyTableCategory <- c("Highly Suggestive", "Probably TB", "Any Abnormality")
AccuracyTable$Referral <- deparse(substitute(dataset))
rm(Highly, Probably, Any, rval)
return(AccuracyTable)
}
allReferral <- HumanReader(MDF)
Private <- HumanReader(subset(MDF, MDF$Referral %in% "Private Provider"))
Public <- HumanReader(subset(MDF, MDF$Referral %in% "Public DOTS Facilities"))
WalkIn <- HumanReader(subset(MDF, MDF$Referral %in% "Walk-in"))
Missing <- HumanReader(subset(MDF, is.na(MDF$Referral)==T))
Radiologist <- rbind(allReferral, Private, Public, WalkIn, Missing)
rm(allReferral, Private, Public, WalkIn, Missing)
Radiologist$Sensitivity <- paste0(percent(Radiologist$Sens), ", (", percent(Radiologist$Sens_L), " - ", percent(Radiologist$Sens_H), ")")
Radiologist$Specificity <- paste0(percent(Radiologist$Spec), ", (", percent(Radiologist$Spec_L), " - ", percent(Radiologist$Spec_H), ")")
########### Human vs AI ####################
SubgroupPlot <- read.csv("Chapter/Subgroup Table/SubgroupTable.csv")
healthy <- sum(MDF$Xpert2Outcome_num %in% "0")
healthy <- length(MDF$Xpert2Outcome_num %in% "0")
healthy <- length(MDF[MDF$Xpert2Outcome_num %in% "0", 1])
healthy <- sum(MDF[MDF$Xpert2Outcome_num %in% "0", 1])
MDF$Xpert2Outcome_num %in% "0"
sum(MDF$Xpert2Outcome_num %in% "0")
healthy <- sum(MDF$Xpert2Outcome_num %in% "0")
healthy
SubgroupPlot <- SubgroupPlot[, -1]
CAD_Xpert_plot <- read.csv("Results/CAD_Xpert Cutoffs TABLE 4 digits.csv")
CAD_Xpert_plot <- CAD_Xpert_plot[, -1]
CAD_Xpert_plot <- CAD_Xpert_plot[!CAD_Xpert_plot$DeepLearningSystem %in% c("IF1", "JF2", "IF3"), ]
# knitr::kable(Radiologist[(Radiologist$Referral %in% "MDF"), c(8, 10, 11)])
Human <- Radiologist[(Radiologist$Referral %in% "MDF"), c(8, 10, 11, 4)]
Human <- Human[c(3,2,1), ]
Human <- rbind(Human, Human, Human, Human, Human)
AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
AI$Subject <- paste(AI$DeepLearningSystem, AI$Comment)
require(data.table)
# AI <- as.data.table(AI)
# # knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
# AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
# # Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 9]- humanAI[, 4])
humanAI <- humanAI[, c(1,2,3,5:8, 10)]
colnames(humanAI) <- c("human benchmark", "sensitivity", "specificy", "DL System", "AIScore", "sensitivity", "specificy", "Diff specificity")
# AI <- as.data.table(AI)
# # knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
# AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
# # Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
AI$Subject <- paste(AI$DeepLearningSystem, AI$Comment)
require(data.table)
# AI <- as.data.table(AI)
# # knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
# AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
# # Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
AI$Subject <- paste(AI$DeepLearningSystem, AI$Comment)
AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
View(AI)
humanAI <- read.csv("Results/HumanAI.csv")
# write.csv(humanAI, "Results/humanAI.csv", row.names = F)
#
rm(AI, Human)
mat = as.table(rbind(c(1157, 35),
c( 220, 13) ))
colnames(mat) <- rownames(mat) <- c("No", "Yes")
names(dimnames(mat)) = c("Before", "After")
mat
margin.table(mat, 1)
margin.table(mat, 2)
sum(mat)
margin.table(mat, 1)
margin.table(mat, 2)
humanAI
Radiologist
prop.test(x=c(healthy*Radiologist$Spec[1], healthy*Radiologist$Spec[1]+humanAI$Diff.specificity[1]), n=c(400, 400))
prop.test(x=c(healthy*Radiologist$Spec[1], healthy*Radiologist$Spec[1]+humanAI$Diff.specificity[1]), n=c(Radiologist$Spec[1]+humanAI$Diff.specificity, Radiologist$Spec[1]+humanAI$Diff.specificity))
prop.test(x=c(healthy*Radiologist$Spec[1], healthy*(Radiologist$Spec[1]+humanAI$Diff.specificity[1]), n=c(Radiologist$Spec[1]+humanAI$Diff.specificity, Radiologist$Spec[1]+humanAI$Diff.specificity))
prop.test(x=c(healthy*Radiologist$Spec[1], healthy*(Radiologist$Spec[1]+humanAI$Diff.specificity[1]), n=c(healthy, healthy)))
healthy*Radiologist$Spec[1]
healthy*(Radiologist$Spec[1]+humanAI$Diff.specificity[1]
)
(Radiologist$Spec[1]+humanAI$Diff.specificity[1])
humanAI$Diff.specificity <- as.numeric(humanAI$Diff.specificity)
humanAI <- read.csv("Results/HumanAI.csv")
humanAI$Diff.specificity <- as.numeric.factor(humanAI$Diff.specificity)
humanAI <- read.csv("Results/HumanAI.csv")
humanAI$Diff.specificity <- as.numeric(levels(humanAI$Diff.specificity))[humanAI$Diff.specificity]
library(readr)
humanAI <- read_csv("Results/humanAI.csv",
col_types = cols(`Diff specificity` = col_number()))
healthy*(Radiologist$Spec[1]+humanAI$Diff.specificity[1]/100)
humanAI$Diff.specificity[1]/100
humanAI$Diff.specificity[1]
humanAI$Diff.specificity
humanAI <- read_csv("Results/humanAI.csv",
col_types = cols(`Diff.specificity` = col_number()))
humanAI$Diff.specificity[1]
humanAI$Diff.specificity[1]/100
prop.test(x=c(healthy*Radiologist$Spec[1], healthy*(Radiologist$Spec[1]+humanAI$Diff.specificity[1]/100)), n=c(healthy, healthy)))
prop.test(x=c(healthy*Radiologist$Spec[1], healthy*(Radiologist$Spec[1]+humanAI$Diff.specificity[1]/100)), n=c(healthy, healthy))
prop.test(x=c(healthy*(Radiologist$Spec[1]+humanAI$Diff.specificity[1]/100), healthy*Radiologist$Spec[1]), n=c(healthy, healthy))
test <- prop.test(x=c(healthy*(Radiologist$Spec[1]+humanAI$Diff.specificity[1]/100), healthy*Radiologist$Spec[1]), n=c(healthy, healthy))
str(test)
test$conf.int
test$estimate
View(Radiologist)
########### Human vs AI ####################
SubgroupPlot <- read.csv("Chapter/Subgroup Table/SubgroupTable.csv")
AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
AI
View(AI)
AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
AI$Subject <- paste(AI$DeepLearningSystem, AI$Comment)
require(data.table)
AI <- as.data.table(AI)
# # knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
View(AI)
names(CAD_Xpert_plot)
head(CAD_Xpert_plot)
AI <- as.data.table(AI)
# # knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 9]- humanAI[, 4])
humanAI <- humanAI[, c(1,2,3,5:8, 10, 9,4)]
colnames(humanAI) <- c("human benchmark", "sensitivity", "specificy", "DL System", "AIScore", "sensitivity", "specificy", "Diff specificity", "specAI", "specH")
AI <- CAD_Xpert_plot[CAD_Xpert_plot$Comment !="" , c(2, 3, 9, 18, 19, 23)]
AI$Subject <- paste(AI$DeepLearningSystem, AI$Comment)
require(data.table)
AI <- as.data.table(AI)
# # knitr::kable(AI[AI[, .I[which.max(Spec)], by=Subject]$V1])
AI <- AI[AI[, .I[which.max(Spec)], by=Subject]$V1]
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 9]- humanAI[, 4])
humanAI <- humanAI[, c(1,2,3,5:8, 10, 9,4)]
colnames(humanAI) <- c("human benchmark", "sensitivity", "specificy", "DL System", "AIScore", "sensitivity", "specificy", "Diff specificity", "specAI", "specH")
# write.c
source("DataWrangling/GlobalOption.R")
test$estimate
AI
AI$DeepLearningSystem
humanAI
# Radiologist[grep("Probably", Radiologist$AccuracyTableCategory), c(8:11)]
humanAI <- cbind(Human, AI[, c(1,2,4, 5, 3)])
humanAI$Diff <- percent(humanAI[, 9]- humanAI[, 4])
humanAI <- humanAI[, c(1,2,3,5:8, 10, 9,4)]
colnames(humanAI) <- c("human benchmark", "sensitivity", "specificy", "DL System", "AIScore", "sensitivity", "specificy", "Diff specificity", "specAI", "specH")
head(humanAI)
View(humanAI)
# write.csv(humanAI, "Results/humanAI.csv", row.names = F)
#
rm(AI, Human)
test <- prop.test(x=c(humanAI$specAI*healthy, healthy*humanAI$specH), n=c(healthy, healthy))
### McNemar test specificity
healthy <- sum(MDF$Xpert2Outcome_num %in% "0")
test <- prop.test(x=c(humanAI$specAI*healthy, healthy*humanAI$specH), n=c(healthy, healthy))
test <- prop.test(x=c(humanAI$specAI[1]*healthy, healthy*humanAI$specH[1]), n=c(healthy, healthy))
str(test)
test$estimate
summary(test)
test$conf.int
test$estimate
test
0.5129700 - 0.4605709
humanAI$CI <- ""
humanAI$CI[1] <- test$conf.int
View(humanAI)
humanAI$CI[1]
test$conf.int[2]
test$conf.int[1]
humanAI$CI[1] <- paste0(test$conf.int[1], " - ", test$conf.int[2])
humanAI$CI[1]
humanAI$CI[1] <- paste0(percent(test$conf.int[1]), " - ", test$conf.int[2])
humanAI$CI[1]
humanAI$CI[1] <- paste0(percent(test$conf.int[1]), " - ", percent(test$conf.int[2]))
humanAI$CI[1]
for (i in 1:15){
test <- prop.test(x=c(humanAI$specAI[i]*healthy, healthy*humanAI$specH[i]), n=c(healthy, healthy))
humanAI$CI[i] <- paste0(percent(test$conf.int[1]), " - ", percent(test$conf.int[2]))
return(humanAI)
}
View(humanAI)
for (i in 1:15){
test <- prop.test(x=c(humanAI$specAI[i]*healthy, healthy*humanAI$specH[i]), n=c(healthy, healthy))
humanAI$CI[i] <- paste0(percent(test$conf.int[1]), " - ", percent(test$conf.int[2]))
# return(humanAI)
}
humanAI$CI
write.csv(humanAI, "Results/humanAI.csv", row.names = F)
source("radiologist.R")
source("radiologist.R")
humanAI <- read.csv("Results/HumanAI.csv")
knitr::kable(humanAI[c(1,4,7,10,13, 2,5,8,11,14, 3,6,9,12,15), ], row.names = F)
humanAI <- humanAI[c(3,6,9,12,15, 2,5,8,11,14, 1,4,7,10,13), ]
humanAI <- read.csv("Results/HumanAI.csv")
humanAI <- humanAI[c(3,6,9,12,15, 2,5,8,11,14, 1,4,7,10,13), ]
humanAI
names(humanAI)
humanAI <- read.csv("Results/HumanAI.csv", row.names = F)
head(hhumanAI)
head(humanAI)
humanAI <- read.csv("Results/HumanAI.csv", )
humanAI <- humanAI[c(3,6,9,12,15, 2,5,8,11,14, 1,4,7,10,13), -c(7, 9, 10)]
knitr::kable(humanAI, row.names = F)
mergeCells(humanAI, cols=1, rows=1:5)
merge_rows(humanAI, 1:5, "Highly Suggestive", collapse = "")
install.packages("unpivotr")
library(unpivotr)
merge_rows(humanAI, 1:5, "Highly Suggestive", collapse = "")
humanAI <- read.csv("Results/HumanAI.csv", )
humanAI <- humanAI[c(3,6,9,12,15, 2,5,8,11,14, 1,4,7,10,13), -c(7, 9, 10)]
# merge_rows(humanAI, 1:5, "Highly Suggestive", collapse = "")
knitr::kable(humanAI, row.names = F)
rectify(x)
rectify(humanAI)
as_cells(humanAI)
as_cells(humanAI)
names(as_cells(humanAI))
Referral
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/MachineBGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/MachineBGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/MachineBGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/MachineBGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/MachineBGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/MachineBGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/MachineBGD/Chapter/4 Curves.R', echo=TRUE)
source('C:/Users/zhizh/OneDrive - Stop TB Partnership/UNOPS/10 Paper Writing/CAR software/02 Bangladesh/MachineBGD/Chapter/4 Curves.R', echo=TRUE)
names9MDF
names(MDF)
summary(MDF$Date)
summary(MDF$Result.Date)
