tiff("2.0 Version Comparison/2 Curves.tif", width = 10, height = 10, units = "in", res = 100)
require(gridExtra)
grid.arrange(sensCurveqXR, XpertSavingCurveqXR, sensCurveCAD4TB, XpertSavingCurveCAD4TB,  nrow=2)
dev.off()
CAD_Xpert_plot <- read.csv("2.0 Version Comparison/Cutoffs TABLE.csv")
CAD_Xpert_plot <- CAD_Xpert_plot[CAD_Xpert_plot$DeepLearningSystem %in% c("qXRv2", "qXRv3"), ]
CAD_Xpert_plot$DeepLearningSystem <- as.character(CAD_Xpert_plot$DeepLearningSystem)
### d. Sensitivity vs Score --------------------
base <- ggplot(CAD_Xpert_plot, aes(Score, Sens)) + geom_path(aes(color = DeepLearningSystem)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00")) +  scale_color_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"))
# + geom_ribbon(aes(x = Score, ymin = Sens_L, ymax = Sens_H, color = DeepLearningSystem, fill = DeepLearningSystem), alpha= 0.2)
sensCurveqXR <- base + theme_light() + labs(x = "Abnormality Score", y= "Sensitivity", subtitle = paste0("qXRv2 vs qXRv3: The Sensitivity vs abnormality score (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = c(5,5),legend.justification = c("left", "bottom")) + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 100, 10), breaks = seq(0, 100, 10))+ scale_y_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
### e. Xpert Saved vs Score --------------------
base <- ggplot(CAD_Xpert_plot, aes(Score, XpertSaved)) + geom_path(aes(color = DeepLearningSystem))  + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00")) +  scale_color_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"))
XpertSavingCurveqXR <- base + theme_light()  + labs(x = "e. Abnormality Score", y= "Xpert Saved", subtitle = paste0("qXRv2 vs qXRv3: The Xpert Saved vs abnormality score (n=", length(MDF$PID_OMRS), ")")) + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 100, 10), breaks = seq(0, 100, 10))+ scale_y_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1)) +theme(  legend.position = c(0.05,0.95),  legend.justification = c("left", "top"))
# CAD4TB ----
CAD_Xpert_plot <- read.csv("2.0 Version Comparison/Cutoffs TABLE.csv")
CAD_Xpert_plot <- CAD_Xpert_plot[CAD_Xpert_plot$DeepLearningSystem %in% c("CAD4TBv6", "CAD4TBv7"), ]
CAD_Xpert_plot$DeepLearningSystem <- as.character(CAD_Xpert_plot$DeepLearningSystem)
### d. Sensitivity vs Score --------------------
base <- ggplot(CAD_Xpert_plot, aes(Score, Sens)) + geom_path(aes(color = DeepLearningSystem)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00")) +  scale_color_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"))
# + geom_ribbon(aes(x = Score, ymin = Sens_L, ymax = Sens_H, color = DeepLearningSystem, fill = DeepLearningSystem), alpha= 0.2)
sensCurveCAD4TB <- base + theme_light()  + labs(x = "Abnormality Score", y= "Sensitivity", subtitle = paste0("CAD4TBv6 vs CAD4TBv7: The Sensitivity vs abnormality score (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = c(5,5),legend.justification = c("left", "bottom")) + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 100, 10), breaks = seq(0, 100, 10))+ scale_y_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
### e. Xpert Saved vs Score --------------------
base <- ggplot(CAD_Xpert_plot, aes(Score, XpertSaved)) + geom_path(aes(color = DeepLearningSystem))  + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00")) +  scale_color_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"))
XpertSavingCurveCAD4TB <- base + theme_light()  + labs(x = "e. Abnormality Score", y= "Xpert Saved", subtitle = paste0("CAD4TBv6 vs CAD4TBv7: The Xpert Saved vs abnormality score (n=", length(MDF$PID_OMRS), ")")) + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 100, 10), breaks = seq(0, 100, 10))+ scale_y_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1)) +theme(legend.position = c(0.05,0.95),  legend.justification = c("left", "top"))
### Save --------------------
tiff("2.0 Version Comparison/2 Curves.tif", width = 10, height = 10, units = "in", res = 100)
require(gridExtra)
grid.arrange(sensCurveqXR, XpertSavingCurveqXR, sensCurveCAD4TB, XpertSavingCurveCAD4TB,  nrow=2)
dev.off()
# qXR ----
CAD_Xpert_plot <- read.csv("2.0 Version Comparison/Cutoffs TABLE.csv")
CAD_Xpert_plot <- CAD_Xpert_plot[CAD_Xpert_plot$DeepLearningSystem %in% c("qXRv2", "qXRv3"), ]
CAD_Xpert_plot$DeepLearningSystem <- as.character(CAD_Xpert_plot$DeepLearningSystem)
### d. Sensitivity vs Score --------------------
base <- ggplot(CAD_Xpert_plot, aes(Score, Sens)) + geom_path(aes(color = DeepLearningSystem)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00")) +  scale_color_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"))
# + geom_ribbon(aes(x = Score, ymin = Sens_L, ymax = Sens_H, color = DeepLearningSystem, fill = DeepLearningSystem), alpha= 0.2)
sensCurveqXR <- base + theme_light() + labs(x = "Abnormality Score", y= "Sensitivity", subtitle = paste0("a. qXRv2 vs qXRv3: The Sensitivity vs abnormality score (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = c(5,5),legend.justification = c("left", "bottom")) + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 100, 10), breaks = seq(0, 100, 10))+ scale_y_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
### e. Xpert Saved vs Score --------------------
base <- ggplot(CAD_Xpert_plot, aes(Score, XpertSaved)) + geom_path(aes(color = DeepLearningSystem))  + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00")) +  scale_color_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"))
XpertSavingCurveqXR <- base + theme_light()  + labs(x = "e. Abnormality Score", y= "Xpert Saved", subtitle = paste0("b. qXRv2 vs qXRv3: The Xpert Saved vs abnormality score (n=", length(MDF$PID_OMRS), ")")) + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 100, 10), breaks = seq(0, 100, 10))+ scale_y_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1)) +theme(  legend.position = c(0.05,0.95),  legend.justification = c("left", "top"))
# CAD4TB ----
CAD_Xpert_plot <- read.csv("2.0 Version Comparison/Cutoffs TABLE.csv")
CAD_Xpert_plot <- CAD_Xpert_plot[CAD_Xpert_plot$DeepLearningSystem %in% c("CAD4TBv6", "CAD4TBv7"), ]
CAD_Xpert_plot$DeepLearningSystem <- as.character(CAD_Xpert_plot$DeepLearningSystem)
### d. Sensitivity vs Score --------------------
base <- ggplot(CAD_Xpert_plot, aes(Score, Sens)) + geom_path(aes(color = DeepLearningSystem)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00")) +  scale_color_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"))
# + geom_ribbon(aes(x = Score, ymin = Sens_L, ymax = Sens_H, color = DeepLearningSystem, fill = DeepLearningSystem), alpha= 0.2)
sensCurveCAD4TB <- base + theme_light()  + labs(x = "Abnormality Score", y= "Sensitivity", subtitle = paste0("c. CAD4TBv6 vs CAD4TBv7: The Sensitivity vs abnormality score (n=", length(MDF$PID_OMRS), ")")) +theme(legend.position = c(5,5),legend.justification = c("left", "bottom")) + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 100, 10), breaks = seq(0, 100, 10))+ scale_y_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1))
### e. Xpert Saved vs Score --------------------
base <- ggplot(CAD_Xpert_plot, aes(Score, XpertSaved)) + geom_path(aes(color = DeepLearningSystem))  + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00")) +  scale_color_manual(values=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"))
XpertSavingCurveCAD4TB <- base + theme_light()  + labs(x = "e. Abnormality Score", y= "Xpert Saved", subtitle = paste0("d. CAD4TBv6 vs CAD4TBv7: The Xpert Saved vs abnormality score (n=", length(MDF$PID_OMRS), ")")) + theme(panel.grid.minor = element_line(colour="grey", size=0.5)) + scale_x_continuous(minor_breaks = seq(0 , 100, 10), breaks = seq(0, 100, 10))+ scale_y_continuous(minor_breaks = seq(0 , 1, 0.1), breaks = seq(0, 1, 0.1)) +theme(legend.position = c(0.05,0.95),  legend.justification = c("left", "top"))
### Save --------------------
tiff("2.0 Version Comparison/2 Curves.tif", width = 10, height = 10, units = "in", res = 100)
require(gridExtra)
grid.arrange(sensCurveqXR, XpertSavingCurveqXR, sensCurveCAD4TB, XpertSavingCurveCAD4TB,  nrow=2)
dev.off()
New <- MDF[MDF$TB.Medication.History %in% "No",]
Old <- MDF[MDF$TB.Medication.History %in% "Yes",]
Female <- MDF[MDF$Gender %in% "F", ]
Male <- MDF[MDF$Gender %in% "M", ]
Young <- MDF[MDF$AgeGroup %in% "[15,25)",]
Middle <- MDF[MDF$AgeGroup %in% "[25,60)",]
Senior <- MDF[MDF$AgeGroup %in% "[60,108]",]
PrivateReferral <-subset(MDF, MDF$UseCase %in% "PrivateReferral")
PublicReferral <-subset(MDF, MDF$UseCase %in% "PublicReferral")
DOTS <-subset(MDF, MDF$UseCase %in% "PublicDOTSRetesting")
WalkIn <-subset(MDF, MDF$UseCase %in% "WalkIn")
Community <-subset(MDF, MDF$UseCase %in% "Community screening")
Contacts <-subset(MDF, MDF$UseCase %in% "Contacts")
source("2.0 Version Comparison/Global.R")
HumanReader <- function (dataset){
### Highly suggestive of TB -------------------------------
TP <- sum(dataset$rad.highly.TB %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.highly.TB %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Highly <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
###  High+possible ----------------------------
TP <- sum(dataset$rad.TB %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.TB %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Probably <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
### Any abnormalities ------------------------------
TP <- sum(dataset$rad.abn %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.abn %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Any <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame(matrix(unlist(c(Highly, Probably, Any)), nrow = 3, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H", "ppv", "ppv_L", "ppv_H", "npv","npv_L", "npv_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
AccuracyTable$AccuracyTableCategory <- c("Highly Suggestive", "Probably TB", "Any Abnormality")
AccuracyTable$Referral <- deparse(substitute(dataset))
rm(Highly, Probably, Any, rval)
return(AccuracyTable)
}
New <- MDF[MDF$TB.Medication.History %in% "No",]
Old <- MDF[MDF$TB.Medication.History %in% "Yes",]
Female <- MDF[MDF$Gender %in% "F", ]
Male <- MDF[MDF$Gender %in% "M", ]
Young <- MDF[MDF$AgeGroup %in% "[15,25)",]
Middle <- MDF[MDF$AgeGroup %in% "[25,60)",]
Senior <- MDF[MDF$AgeGroup %in% "[60,108]",]
PrivateReferral <-subset(MDF, MDF$UseCase %in% "PrivateReferral")
PublicReferral <-subset(MDF, MDF$UseCase %in% "PublicReferral")
DOTS <-subset(MDF, MDF$UseCase %in% "PublicDOTSRetesting")
WalkIn <-subset(MDF, MDF$UseCase %in% "WalkIn")
Community <-subset(MDF, MDF$UseCase %in% "Community screening")
Contacts <-subset(MDF, MDF$UseCase %in% "Contacts")
Young <- HumanReader(Young)
Middle <- HumanReader(Middle)
Senior <- HumanReader(Senior)
New <- HumanReader(New)
Old <- HumanReader(Old)
Female <- HumanReader(Female)
Male <- HumanReader(Male)
allReferral <- HumanReader(MDF)
HumanReader <- function (dataset){
### Highly suggestive of TB -------------------------------
TP <- sum(dataset$rad.highly.TB %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.highly.TB %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Highly <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
###  High+possible ----------------------------
TP <- sum(dataset$rad.TB %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.TB %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Probably <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
### Any abnormalities ------------------------------
TP <- sum(dataset$rad.abn %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.abn %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Any <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame(matrix(unlist(c(Highly, Probably, Any)), nrow = 3, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H", "ppv", "ppv_L", "ppv_H", "npv","npv_L", "npv_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
AccuracyTable$AccuracyTableCategory <- c("Highly Suggestive", "Probably TB", "Any Abnormality")
AccuracyTable$Referral <- deparse(substitute(dataset))
rm(Highly, Probably, Any, rval)
return(AccuracyTable)
}
allReferral <- HumanReader(MDF)
source("2.0 Version Comparison/Global.R")
HumanReader <- function (dataset){
### Highly suggestive of TB -------------------------------
TP <- sum(dataset$rad.highly.TB %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.highly.TB %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Highly <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
###  High+possible ----------------------------
TP <- sum(dataset$rad.TB %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.TB %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Probably <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
### Any abnormalities ------------------------------
TP <- sum(dataset$rad.abn %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.abn %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Any <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame(matrix(unlist(c(Highly, Probably, Any)), nrow = 3, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H", "ppv", "ppv_L", "ppv_H", "npv","npv_L", "npv_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
AccuracyTable$AccuracyTableCategory <- c("Highly Suggestive", "Probably TB", "Any Abnormality")
AccuracyTable$Referral <- deparse(substitute(dataset))
rm(Highly, Probably, Any, rval)
return(AccuracyTable)
}
allReferral <- HumanReader(MDF)
HumanReader <- function (dataset){
# ### Highly suggestive of TB -------------------------------
# TP <- sum(dataset$rad.highly.TB %in% "1" & dataset$Xpert2Outcome_num==1)
# FP <- sum(dataset$rad.highly.TB %in% 1 & dataset$Xpert2Outcome_num==0)
# TN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==0)
# FN <- sum(dataset$rad.highly.TB %in% 0 & dataset$Xpert2Outcome_num==1)
#
#
# dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
# colnames(dat) <- c("Xpert+","Xpert-")
# rownames(dat) <- c("CXR+","CXR-")
# rval <- epi.tests(dat, conf.level = 0.95)
# rval
# Highly <- rval$elements[c(59, 55, 51, 47)]
# rm(TP, FP, TN, FN)
#
#
# ###  High+possible ----------------------------
# TP <- sum(dataset$rad.TB %in% "1" & dataset$Xpert2Outcome_num==1)
# FP <- sum(dataset$rad.TB %in% 1 & dataset$Xpert2Outcome_num==0)
# TN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==0)
# FN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==1)
#
#
# dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
# colnames(dat) <- c("Xpert+","Xpert-")
# rownames(dat) <- c("CXR+","CXR-")
# rval <- epi.tests(dat, conf.level = 0.95)
# rval
# Probably <- rval$elements[c(59, 55, 51, 47)]
# rm(TP, FP, TN, FN)
### Any abnormalities ------------------------------
TP <- sum(dataset$rad.abn %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.abn %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Any <- rval$elements[c(59, 55, 51, 47)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame(matrix(unlist(any), nrow = 1, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H", "ppv", "ppv_L", "ppv_H", "npv","npv_L", "npv_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
AccuracyTable$AccuracyTableCategory <- c("Highly Suggestive", "Probably TB", "Any Abnormality")
AccuracyTable$Referral <- deparse(substitute(dataset))
return(AccuracyTable)
}
allReferral <- HumanReader(MDF)
HumanReader <- function (dataset){
### Any abnormalities ------------------------------
TP <- sum(dataset$rad.abn %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.abn %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Any <- rval$detail[c(3,4)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame(matrix(unlist(any), nrow = 1, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H", "ppv", "ppv_L", "ppv_H", "npv","npv_L", "npv_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
AccuracyTable$AccuracyTableCategory <- c("Highly Suggestive", "Probably TB", "Any Abnormality")
AccuracyTable$Referral <- deparse(substitute(dataset))
return(AccuracyTable)
}
allReferral <- HumanReader(MDF)
HumanReader <- function (dataset){
### Any abnormalities ------------------------------
TP <- sum(dataset$rad.abn %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.abn %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
colnames(dat) <- c("Xpert+","Xpert-")
rownames(dat) <- c("CXR+","CXR-")
rval <- epi.tests(dat, conf.level = 0.95)
rval
Any <- rval$detail[c(3,4)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame(matrix(unlist(any), nrow = 1, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H", "ppv", "ppv_L", "ppv_H", "npv","npv_L", "npv_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
# AccuracyTable$AccuracyTableCategory <- c("Highly Suggestive", "Probably TB", "Any Abnormality")
AccuracyTable$Referral <- deparse(substitute(dataset))
return(AccuracyTable)
}
allReferral <- HumanReader(MDF)
HumanReader <- function (dataset){
### Any abnormalities ------------------------------
TP <- sum(dataset$rad.abn %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.abn %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
rval <- epi.tests(dat, conf.level = 0.95)
rval
Any.df <- rval$detail[c(3,4)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame()
AccuracyTable <- data.frame(matrix(unlist(c(TB.df, Any.df)), nrow = 2, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
AccuracyTable$Subgroup <- deparse(substitute(dataset))
return(AccuracyTable)
}
allReferral <- HumanReader(MDF)
HumanReader <- function (dataset){
### Any abnormalities ------------------------------
TP <- sum(dataset$rad.abn %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.abn %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.abn %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
rval <- epi.tests(dat, conf.level = 0.95)
rval
Any.df <- rval$detail[c(3,4)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame()
AccuracyTable <- data.frame(matrix(unlist(Any.df), nrow = 1, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
AccuracyTable$Subgroup <- deparse(substitute(dataset))
return(AccuracyTable)
}
allReferral <- HumanReader(MDF)
View(allReferral)
PrivateReferral <- HumanReader(subset(MDF, MDF$UseCase %in% "PrivateReferral"))
PublicReferral <- HumanReader(subset(MDF, MDF$UseCase %in% "PublicReferral"))
DOTS <- HumanReader(subset(MDF, MDF$UseCase %in% "PublicDOTSRetesting"))
WalkIn <- HumanReader(subset(MDF, MDF$UseCase %in% "WalkIn"))
Community <- HumanReader(subset(MDF, MDF$UseCase %in% "Community screening"))
Contacts <- HumanReader(subset(MDF, MDF$UseCase %in% "Contacts"))
Missing <- HumanReader(subset(MDF, is.na(MDF$UseCase)==T))
Young <- HumanReader(Young)
Middle <- HumanReader(Middle)
Senior <- HumanReader(Senior)
New <- HumanReader(New)
Old <- HumanReader(Old)
Female <- HumanReader(Female)
Male <- HumanReader(Male)
Radiologist <- rbind(allReferral, Young, Middle, Senior, New, Old, Female, Male , PrivateReferral,PublicReferral, DOTS, WalkIn, Community,Contacts, Missing)
rm(allReferral, Young, Middle, Senior, New, Old, Female, Male , PrivateReferral,PublicReferral, DOTS, WalkIn, Community,Contacts, Missing)
Radiologist$Sensitivity <- paste0(percent(Radiologist$Sens), ", (", percent(Radiologist$Sens_L, suffix = ""), "-", percent(Radiologist$Sens_H), ")")
Radiologist$Specificity <- paste0(percent(Radiologist$Spec), ", (", percent(Radiologist$Spec_L, suffix = ""), "-", percent(Radiologist$Spec_H), ")")
View(Radiologist)
source("2.0 Version Comparison/Global.R")
rm(list = ls())
source("2.0 Version Comparison/Global.R")
source("2.0 Version Comparison/radiologist.R")
New <- MDF[MDF$TB.Medication.History %in% "No",]
Old <- MDF[MDF$TB.Medication.History %in% "Yes",]
Female <- MDF[MDF$Gender %in% "F", ]
Male <- MDF[MDF$Gender %in% "M", ]
Young <- MDF[MDF$AgeGroup %in% "[15,25)",]
Middle <- MDF[MDF$AgeGroup %in% "[25,60)",]
Senior <- MDF[MDF$AgeGroup %in% "[60,108]",]
PrivateReferral <-subset(MDF, MDF$UseCase %in% "PrivateReferral")
PublicReferral <-subset(MDF, MDF$UseCase %in% "PublicReferral")
DOTS <-subset(MDF, MDF$UseCase %in% "PublicDOTSRetesting")
WalkIn <-subset(MDF, MDF$UseCase %in% "WalkIn")
Community <-subset(MDF, MDF$UseCase %in% "Community screening")
Contacts <-subset(MDF, MDF$UseCase %in% "Contacts")
source("2.0 Version Comparison/Global.R")
HumanReader <- function (dataset){
### TB abnormalities ------------------------------
TP <- sum(dataset$rad.TB %in% "1" & dataset$Xpert2Outcome_num==1)
FP <- sum(dataset$rad.TB %in% 1 & dataset$Xpert2Outcome_num==0)
TN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==0)
FN <- sum(dataset$rad.TB %in% 0 & dataset$Xpert2Outcome_num==1)
dat <- as.table(matrix(c(TP, FP, FN, TN), nrow=2, byrow=TRUE))
rval <- epi.tests(dat, conf.level = 0.95)
rval
TB.df <- rval$detail[c(3,4)]
rm(TP, FP, TN, FN)
AccuracyTable <- data.frame()
AccuracyTable <- data.frame(matrix(unlist(TB.df), nrow = 1, byrow = T))
colnames(AccuracyTable) <- c("Sens", "Sens_L", "Sens_H", "Spec", "Spec_L", "Spec_H")
AccuracyTable$X <- 1-AccuracyTable$Spec
AccuracyTable$Subgroup <- deparse(substitute(dataset))
return(AccuracyTable)
}
allReferral <- HumanReader(MDF)
PrivateReferral <- HumanReader(subset(MDF, MDF$UseCase %in% "PrivateReferral"))
PublicReferral <- HumanReader(subset(MDF, MDF$UseCase %in% "PublicReferral"))
DOTS <- HumanReader(subset(MDF, MDF$UseCase %in% "PublicDOTSRetesting"))
WalkIn <- HumanReader(subset(MDF, MDF$UseCase %in% "WalkIn"))
Community <- HumanReader(subset(MDF, MDF$UseCase %in% "Community screening"))
Contacts <- HumanReader(subset(MDF, MDF$UseCase %in% "Contacts"))
Missing <- HumanReader(subset(MDF, is.na(MDF$UseCase)==T))
Young <- HumanReader(Young)
Middle <- HumanReader(Middle)
Senior <- HumanReader(Senior)
New <- HumanReader(New)
Old <- HumanReader(Old)
Female <- HumanReader(Female)
Male <- HumanReader(Male)
Radiologist <- rbind(allReferral, Young, Middle, Senior, New, Old, Female, Male , PrivateReferral,PublicReferral, DOTS, WalkIn, Community,Contacts, Missing)
rm(allReferral, Young, Middle, Senior, New, Old, Female, Male , PrivateReferral,PublicReferral, DOTS, WalkIn, Community,Contacts, Missing)
Radiologist$Sensitivity <- paste0(percent(Radiologist$Sens), ", (", percent(Radiologist$Sens_L, suffix = ""), "-", percent(Radiologist$Sens_H), ")")
Radiologist$Specificity <- paste0(percent(Radiologist$Spec), ", (", percent(Radiologist$Spec_L, suffix = ""), "-", percent(Radiologist$Spec_H), ")")
write.csv(Radiologist, "2.0 Version Comparison/Radiologist.csv", row.names = FALSE)
Sys.setenv(LANG = "en")
library(ggplot2)
library(scales)
library(epiR)
library(ggthemes)
library(RColorBrewer)
library(plyr)
library(reshape2)
library(pROC) # contain function roc
library(tidyverse)
library(dplyr)
library(lubridate)
library(readxl)
library(plotROC)
library(flextable)
library(DataExplorer)
library(readxl)
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
Master_df <- read.csv(file = "DataWrangling/BGD.csv", header=T)
View(Master_df)
Sys.setenv(LANG = "en")
library(ggplot2)
library(scales)
library(epiR)
library(ggthemes)
library(RColorBrewer)
library(plyr)
library(reshape2)
library(pROC) # contain function roc
library(tidyverse)
library(dplyr)
library(lubridate)
library(readxl)
library(plotROC)
library(flextable)
library(DataExplorer)
library(readxl)
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
Master_df <- read.csv(file = "DataWrangling/BGD.csv", header=T)
Master_df$Result.Date <- mdy(Master_df$Radiology.Result.Date)
Master_df$Result.Year <- quarter(Master_df$Result.Date)
Master_df$Xpert2Outcome_num <- as.character(Master_df$GXP.Result)
Master_df$Xpert2Outcome_num[Master_df$GXP.Result %in% "MTB Detected"] <- "1"
Master_df$Xpert2Outcome_num[Master_df$GXP.Result %in% "MTB Not Detected"] <- "0"
Master_df$Xpert2Outcome_num <- as.numeric(Master_df$Xpert2Outcome_num)
Sys.setenv(LANG = "en")
library(ggplot2)
library(scales)
library(epiR)
library(ggthemes)
library(RColorBrewer)
library(plyr)
library(reshape2)
library(pROC) # contain function roc
library(tidyverse)
library(dplyr)
library(lubridate)
library(readxl)
library(plotROC)
library(flextable)
library(DataExplorer)
library(readxl)
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
Master_df <- read.csv(file = "DataWrangling/BGD.csv", header=T)
Master_df$Result.Date <- mdy(Master_df$Radiology.Result.Date)
Master_df$Result.Year <- quarter(Master_df$Result.Date)
Master_df$Xpert2Outcome_num <- as.character(Master_df$GXP.Result)
Master_df$Xpert2Outcome_num[Master_df$GXP.Result %in% "MTB Detected"] <- "1"
Master_df$Xpert2Outcome_num[Master_df$GXP.Result %in% "MTB Not Detected"] <- "0"
Master_df$Xpert2Outcome_num <- as.numeric(Master_df$Xpert2Outcome_num)
# Master_df <- Master_df %>%
#   filter(Result.Date < as.Date("2017-01-01"))
SymptomData <- read_excel("DataWrangling/ScreeningData.xlsx")
Master_df <- merge(Master_df, SymptomData, by.x = "PID_OMRS", by.y = "OpenMRS Identification Number", all.x = TRUE)
write.csv(Master_df, "K:/Shared drives/1_Digital Health/1.3. Manuscripts/2.2. Children/BGD Children/00_Input_Data/master_df.csv")
